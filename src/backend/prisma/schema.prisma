generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int    @id @default(autoincrement())
  fullName     String
  email        String @unique
  phoneNumber  Int
  mobileNumber Int    @unique
  location     String
  job          String
  isManager Boolean?
  idManager Int?

  projects project[]

  userApplyProject   userApplyProject[]
  saveProject        saveProject[]
}



model project {
  id                 Int      @id @default(autoincrement())
  name               String
  description        String
  aplicationDeadLine DateTime
  duration           String
  status             String
  dateStart          DateTime
  isApproved          Boolean?

  idUser    Int?
  idManager Int?

  User    user?    @relation(fields: [idUser], references: [id],onDelete: Cascade)


  userApplyProject   userApplyProject[]
  projectRole        projectRole[]
  saveProject        saveProject[]
  projectTag         projectTag[]
}

model userApplyProject {
  idProject Int
  idUser    Int
  idRole    Int

  User    user    @relation(fields: [idUser], references: [id],onDelete: Cascade)
  Project project @relation(fields: [idProject], references: [id],onDelete: Cascade)
  Role    role    @relation(fields: [idRole], references: [id],onDelete: Cascade)

  @@id([idUser, idProject, idRole])
}



model role {
  id                 Int                  @id @default(autoincrement())
  name               String
  userApplyProject   userApplyProject[]
  projectRole        projectRole[]
}

model projectRole {
  idRole    Int
  idProject Int

  Role    role    @relation(fields: [idRole], references: [id],onDelete: Cascade)
  Project project @relation(fields: [idProject], references: [id],onDelete: Cascade)

  @@id([idRole, idProject])
}

model saveProject {
  idProject Int
  idUser    Int

  Project project @relation(fields: [idProject], references: [id],onDelete: Cascade)
  User    user    @relation(fields: [idUser], references: [id],onDelete: Cascade)

  @@id([idUser, idProject])
}

model tag {
  id         Int          @id @default(autoincrement())
  name       String
  projectTag projectTag[]
}

model projectTag {
  idProject Int
  idTag     Int

  Project project @relation(fields: [idProject], references: [id],onDelete: Cascade)
  Tag     tag     @relation(fields: [idTag], references: [id],onDelete: Cascade)

  @@id([idProject, idTag])
}
