import { ApiProperty } from '@nestjs/swagger';
import { IsInt, IsNotEmpty } from 'class-validator';

export class DTOBodyApplyProject {
    @ApiProperty()
    @IsNotEmpty({ message: 'idProject is required' })
    @IsInt({ message: 'is not a number' })
    idProject: number;

    @ApiProperty()
    @IsNotEmpty({ message: 'idUser is required' })
    @IsInt({ message: 'is not a number' })
    idUser: number;

    @ApiProperty()
    @IsNotEmpty({ message: 'idRole is required' })
    @IsInt({ message: 'is not a number' })
    idRole: number;
}

/**The first line of code imports the ApiProperty function from the '@nestjs/swagger' module, which is used to document the properties of the DTO object in the API documentation generated by Swagger.

The second line of code imports the IsInt and IsNotEmpty functions from the 'class-validator' module, which are used to validate if the properties of the DTO object have an integer value and if they are empty or not, respectively.

The DTOBodyApplyProject class is exported, which contains three properties:

idProject: an integer number that represents the id of the project to be applied. This property is annotated with @ApiProperty() and @IsNotEmpty() to indicate that it should be documented and should not be empty.
idUser: an integer number that represents the id of the user who is applying the project. This property is annotated with @ApiProperty() and @IsNotEmpty() to indicate that it should be documented and should not be empty.
idRole: an integer number that represents the id of the user's role who is applying the project. This property is annotated with @ApiProperty() and @IsNotEmpty() to indicate that it should be documented and should not be empty. */